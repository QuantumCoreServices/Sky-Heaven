<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://docbook.org/xml/4.5/docbookx.dtd" [
<!ENTITY legal SYSTEM "legal.xml">
<!ENTITY url_refdocs_base "http://developer.gnome.org/grilo/unstable/">
<!ENTITY url_examples_base "http://git.gnome.org/browse/grilo-plugins/tree/help/examples/">
<!ENTITY uuml "&#252;">
<!ENTITY szlig "&#223;">
<!ENTITY verbar "&#124;">
<!ENTITY copy "&#169;">
<!ENTITY nbsp "&#160;">
]>
<!-- The XSL for developer.gnome.org requires this id. -->
<book id="index" lang="sv">

  <bookinfo>

    <title>Grilo-insticksmoduler</title>

    <authorgroup>
      <author><firstname>Murray</firstname> <surname>Cumming</surname></author>
    </authorgroup>

    <abstract>

      <!-- This text is copied from the introduction. -->
      <para>Grilo är ett ramverk för att bläddra bland och söka mediainnehåll från olika källor med ett enda API. Grilo-insticksmodulerna pluggar in sig i Grilo-ramverket för att tillhandahålla åtkomst till olika källor av media och metadata.</para>
    </abstract>

    <copyright><year>2012</year> <holder>Openismus GmbH</holder></copyright>

    <legalnotice>
      <para>Tillstånd ges för att kopiera, distribuera och/eller ändra detta dokument under villkoren för GNU Free Documentation License, version 1.2 eller någon senare version som publicerats av Free Software Foundation; utan några oföränderliga avsnitt, inga framsidestexter och inga baksidestexter. Du kan erhålla en kopia av GNU Free Documentation License från Free Software Foundation genom att besöka deras webbplats eller genom att skriva till: Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02111-1301, USA.</para>
    </legalnotice>

  
    <othercredit class="translator">
      <personname>
        <firstname>Anders Jonsson</firstname>
      </personname>
      <email>anders.jonsson@norsjovallen.se</email>
    </othercredit>
    <copyright>
      
        <year>2018</year>
      
      <holder>Anders Jonsson</holder>
    </copyright>
  </bookinfo>

<chapter id="chapter-introduction">
<title>Introduktion</title>

<para>Grilo är ett ramverk för att bläddra bland och söka mediainnehåll från olika källor med ett enda API. Grilo-insticksmodulerna pluggar in sig i Grilo-ramverket för att tillhandahålla åtkomst till olika källor av media och metadata.</para>
</chapter>


<chapter id="chapter-plugins">
<title>Grilo-insticksmoduler</title>


<sect1 id="sec-plugin-apple-trailers">
<title>Apple-filmtrailrar</title>
<para>Detta är en Grilo-insticksmodul för Apple-filmtrailrar. Dess insticksmodul-ID är <literal>"grl-apple-trailers"</literal></para>
</sect1>

<sect1 id="sec-plugin-bookmarks">
<title>Bokmärken</title>
<para>Detta är en Grilo-insticksmodul för bokmärken. Dess insticksmodul-ID är <literal>"grl-bookmarks"</literal></para>
</sect1>

<sect1 id="sec-plugin-dmap">
<title>DMap</title>
<para>Detta är en Grilo-insticksmodul för DMap. Dess insticksmodul-ID är <literal>"grl-dmap"</literal></para>
</sect1>

<sect1 id="sec-plugin-filesystem">
<title>Filsystem</title>
<para>Detta är en Grilo-insticksmodul för filsystemet. Dess insticksmodul-ID är <literal>"grl-filesystem"</literal></para>
</sect1>

<sect1 id="sec-plugin-flickr">
<title>Flickr</title>
<para>Detta är en Grilo-insticksmodul för Flickr. Dess insticksmodul-ID är <literal>"grl-flickr"</literal></para>
</sect1>

<sect1 id="sec-plugin-gravatar">
<title>Gravatar</title>
<para>Detta är en Grilo-insticksmodul för Gravatar. Dess insticksmodul-ID är <literal>"grl-gravatar"</literal>.</para>
</sect1>

<sect1 id="sec-plugin-jamendo">
<title>Jamendo</title>
<para>Detta är en Grilo-insticksmodul för Jamendo. Dess insticksmodul-ID är <literal>"grl-jamendo"</literal></para>
</sect1>

<sect1 id="sec-plugin-local-metadata">
<title>Lokala metadata</title>
<para>Detta är en Grilo-insticksmodul för lokala metadata. Dess insticksmodul-ID är <literal>"grl-local-metadata"</literal></para>
</sect1>

<sect1 id="sec-plugin-metadata-store">
<title>Metadata-lager</title>
<para>Detta är en Grilo-insticksmodul för metadata-lager. Dess insticksmodul-ID är <literal>"grl-metadata-store"</literal></para>
</sect1>

<sect1 id="sec-plugin-optical-media">
<title>Optiskt media</title>
<para>Detta är en Grilo-insticksmodul för optiskt media. Dess insticksmodul-ID är <literal>"grl-optical-media"</literal></para>
</sect1>

<sect1 id="sec-plugin-podcasts">
<title>Poddsändningar</title>
<para>Detta är en Grilo-insticksmodul för poddsändningar. Dess insticksmodul-ID är <literal>"grl-podcasts"</literal></para>
</sect1>

<sect1 id="sec-plugin-shoutcast">
<title>Shoutcast</title>
<para>Detta är en Grilo-insticksmodul för Shoutcast. Dess insticksmodul-ID är <literal>"grl-shoutcast"</literal></para>
</sect1>

<sect1 id="sec-plugin-tmdb">
<title>TMDb-insticksmodul</title>
<para>TMDb-insticksmodulen erhåller information om filmer från <ulink url="http://themoviedb.org">TMDb-nättjänsten</ulink>, som är en filmdatabas som underhålls av en gemenskap. Dess insticksmodul-ID är <literal>"grl-tmdb"</literal></para>
<para>Före du använder denna insticksmodul bör du ställa in TMDB-API-nyckeln med <ulink url="http://developer.gnome.org/grilo/unstable/GrlConfig.html#grl-config-set-api-key"><function>grl_config_set_api_key()</function></ulink>.</para>
<para>Du kan sedan använda <ulink url="http://developer.gnome.org/grilo/unstable/GrlSource.html#grl-source-resolve"><function>grl_source_resolve()</function></ulink> för att få veta detaljer om ett befintligt GrlMediaItem.</para>
<para>Denna insticksmodul stöder inte sökning via <ulink url="http://developer.gnome.org/grilo/unstable/GrlSource.html#grl-source-search"><function>grl_source_search()</function></ulink> eller frågor via <ulink url="http://developer.gnome.org/grilo/unstable/GrlSource.html#grl-source-query"><function>grl_source_query()</function></ulink>.</para>

<para>Här är ett enkelt exempel på användning av Grilos TMDb-insticksmodul:</para>

<para>Fil: <ulink url="http://git.gnome.org/browse/grilo-plugins/tree/help/examples/example-tmdb.c"><filename>example-tmdb.c</filename></ulink></para>
<programlisting>
/*
 * Copyright (C) 2012 Canonical Ltd.
 *
 * Author: Jens Georg &lt;jensg@openismus.com&gt;
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * as published by the Free Software Foundation; version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA
 *
 */

#include &lt;grilo.h&gt;
#include &lt;stdio.h&gt;

/**
 * This TMDB key is just for testing.
 * For real-world use, please request your own key from
 * http://api.themoviedb.org
 */
#define TMDB_KEY "719b9b296835b04cd919c4bf5220828a"

#define TMDB_PLUGIN_ID "grl-tmdb"

GMainLoop *loop = NULL;
GrlKeyID director_key = 0;

static void
resolve_cb (GrlSource *src, guint operation_id, GrlMedia *media, gpointer user_data, const GError *error)
{
  const char *title, *studio;

  g_assert_no_error (error);
  g_assert (media);

  title = grl_media_get_title (media);
  studio = grl_media_get_studio (media);
  printf ("Media: Title='%s', Studio='%s'\n",
    title, studio);

  if (director_key != 0) {
    const gchar *director =
      grl_data_get_string (GRL_DATA (media), director_key);
    printf ("  Director=%s\n", director);
  }

  g_main_loop_quit (loop);
}

int main (int argc, char *argv[])
{
  GrlRegistry *reg;
  GrlConfig *config;
  GError *error = NULL;
  GrlSource *src;
  gboolean plugin_activated;
  GrlCaps *caps;
  GrlOperationOptions *options;
  GrlMedia *media;
  const GList *keys;
  const GList* l;

  grl_init (&amp;argc, &amp;argv);

  /*
   * Set the TMDB API key:
   * You must use your own TMDB API key in your own application.
   */
  reg = grl_registry_get_default ();
  config = grl_config_new (TMDB_PLUGIN_ID, NULL);
  grl_config_set_api_key (config, TMDB_KEY);
  grl_registry_add_config (reg, config, NULL);
  grl_registry_load_all_plugins (reg, FALSE, NULL);

  /*
   * Get the plugin:
   */
  error = NULL;
  plugin_activated =
    grl_registry_activate_plugin_by_id (reg, TMDB_PLUGIN_ID, &amp;error);
  g_assert (plugin_activated);
  g_assert_no_error (error);

  /*
   * Get the Grilo source:
   */
  src = grl_registry_lookup_source (reg, TMDB_PLUGIN_ID);

  /*
   * Check that it has the expected capability:
   */
  g_assert (grl_source_supported_operations (src) &amp; GRL_OP_RESOLVE);
  caps = grl_source_get_caps (src, GRL_OP_RESOLVE);
  g_assert (caps);

  options = grl_operation_options_new (caps);

  /*
   * A media item that we will give to the TMDB plugin,
   * to discover its details.
   */
  media = grl_media_video_new ();
  grl_media_set_title (media, "Sherlock Holmes");

  /*
   * Discover what keys are provided by the source:
   */
  keys = grl_source_supported_keys (src);
  for (l = keys; l != NULL; l = l-&gt;next) {
    const gchar *name;
    GrlKeyID id = GPOINTER_TO_INT (l-&gt;data);

    g_assert (id);

    name = grl_metadata_key_get_name (id);
    printf ("Supported key: %s\n", name);

    /*
     * Remember this for later use:
     * You may instead use grl_registry_lookup_metadata_key_name().
     */
    if (g_strcmp0 (name, "tmdb-director") == 0) {
      director_key = id;
    }
  }

  /*
   * Ask the TMDB plugin for the media item's details,
   * from the TMDB online service:
   */
  grl_source_resolve (src, media,
    keys, options,
    resolve_cb, NULL);

  /*
   * Start the main loop so our callback can be called:
   */
  loop = g_main_loop_new (NULL, FALSE);
  g_main_loop_run (loop);

  /*
   * Release objects:
   */
  g_object_unref (media);
  g_object_unref (config);
  g_object_unref (options);

  /*
   * Deinitialize Grilo:
   */
  grl_deinit ();
}



</programlisting>

</sect1>

<sect1 id="sec-plugin-tracker">
<title>Tracker</title>
<para>Detta är en Grilo-insticksmodul för Tracker. Dess insticksmodul-ID är <literal>"grl-tracker"</literal></para>
</sect1>

<sect1 id="sec-plugin-vimeo">
<title>Vimeo</title>
<para>Detta är en Grilo-insticksmodul för Vimeo. Dess insticksmodul-ID är <literal>"grl-vimeo"</literal></para>
</sect1>

<sect1 id="sec-plugin-youtube">
<title>YouTube</title>
<para>Detta är en Grilo-insticksmodul för YouTube. Dess insticksmodul-ID är <literal>"grl-youtube"</literal></para>
</sect1>

<sect1 id="sec-plugin-dleyna">
<title>DLeyna</title>
<para>Detta är en Grilo-insticksmodul för UPnP/DLNA. Dess insticksmodul-ID är <literal>"grl-dleyna"</literal></para>
</sect1>

</chapter>

</book>
